class Book:
    """Базовый класс книги."""
    def __init__(self, name: str, author: str):
        """
        Инициализирует объект книги.
         name: Название книги.
         author: Автор книги.
        """
        self._name = name  # Закрытый атрибут для хранения названия книги.
        self._author = author  # Закрытый атрибут для хранения автора книги.

    @property
    def name(self):
        """
        Свойство для получения названия книги.
        Название книги нельзя изменить после создания объекта.
        return : Название книги.
        """
        return self._name

    @property
    def author(self):
        """
        Свойство для получения автора книги.
        Автор книги также не подлежит изменению.
        return: Имя автора книги.
        """
        return self._author

    def __str__(self):
        """
        Строковое представление объекта книги.
        return : Строка с названием и автором книги.
        """
        return f"Книга {self.name}. Автор {self.author}"


class PaperBook(Book):
    """Класс для представления бумажной книги, наследуемый от Book."""

    def __init__(self, name: str, author: str, pages: int):
        """
        Инициализирует объект бумажной книги.
        name: Название книги.
        author: Автор книги.
        pages: Количество страниц в книге.
        """
        super().__init__(name, author)  # Вызов конструктора базового класса Book.
        self.pages = pages  # Установка значения через свойство pages.

    @property
    def pages(self):
        """
        Свойство для получения количества страниц.
        return: Количество страниц.
        """
        return self._pages

    @pages.setter
    def pages(self, value):
        """
        Свойство для установки количества страниц с проверкой.
        Количество страниц должно быть положительным целым числом.
        value: Количество страниц.
        ValueError: Если значение некорректное.
        """
        if not isinstance(value, int) or value <= 0:
            raise ValueError("Количество страниц должно быть целым положительным числом.")
        self._pages = value

    def __str__(self):
        """
        Строковое представление объекта бумажной книги.
        return: Строка с названием, автором и количеством страниц книги.
        """
        return f"Бумажная книга {self.name}. Автор {self.author}. Страниц: {self.pages}"


class AudioBook(Book):
    """Класс для представления аудиокниги, наследуемый от Book."""

    def __init__(self, name: str, author: str, duration: float):
        """
        Инициализирует объект аудиокниги.
        name: Название книги.
        author: Автор книги.
        duration: Продолжительность аудиокниги в часах.
        """
        super().__init__(name, author)  # Вызов конструктора базового класса Book.
        self.duration = duration  # Установка значения через свойство duration.

    @property
    def duration(self):
        """
        Свойство для получения продолжительности аудиокниги.
        return: Продолжительность в часах.
        """
        return self._duration

    @duration.setter
    def duration(self, value):
        """
        Свойство для установки продолжительности аудиокниги с проверкой.
        Продолжительность должна быть положительным числом (целым или с плавающей запятой).
         value: Продолжительность в часах.
         ValueError: Если значение некорректное.
        """
        if not isinstance(value, (int, float)) or value <= 0:
            raise ValueError("Продолжительность должна быть положительным числом.")
        self._duration = value

    def __str__(self):
        """
        Строковое представление объекта аудиокниги.
        return: Строка с названием, автором и продолжительностью книги.
        """
        return f"Аудиокнига {self.name}. Автор {self.author}. Продолжительность: {self.duration} часов"


# Пример использования
try:
    # Создание экземпляров бумажной и аудиокниг
    paper_book = PaperBook("Идиот", "Фёдор Достоевский", 640)  # Создание бумажной книги
    audio_book = AudioBook("Песнь льда и огня", "Джордж Р. Р. Мартин", 768)  # Создание аудиокниги

    # Вывод информации о книгах
    print(paper_book)  # Ожидаемый вывод: Бумажная книга Идиот. Автор Фёдор Достоевский. Страниц: 640
    print(audio_book)  #Ожидаемый вывод:
    # Аудиокнига Песнь льда и огня. Автор Джордж Р. Р. Мартин.
    # Продолжительность: 768 часов

    # Попытка установить некорректное значение для страниц
    paper_book.pages = -5  # Ошибка: количество страниц должно быть положительным числом
except ValueError as e:
    print(e)  # Вывод сообщения об ошибке
